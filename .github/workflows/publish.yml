name: Build and Publish Package

on:
  issue_comment:
    types: [created]

jobs:
  post-job-comment: 
    if: ${{ startsWith(github.event.comment.body, 'publish') }}
    name: Comment PR
    uses: ./.github/workflows/steps-post-comment.yml
    with:
      EVENT_COMMENT_ID: ${{ github.event.comment.id }}
      EVENT_ISSUE_NUMBER: ${{ github.event.issue.number }}
      GITHUB_RUN_ID: ${{ github.run_id }}
      GITHUB_REPOSITORY: ${{ github.repository }}

  process-comment:
    if: ${{ startsWith(github.event.comment.body, 'publish') }}
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get-environment.outputs.environment }}
      should_run: ${{ steps.get-environment.outputs.should_run }}
    steps:
      - name: Get environment from comment
        id: get-environment
        run: |
          COMMENT="${{ github.event.comment.body }}"
          if [[ $COMMENT =~ publish[[:space:]]+(development|staging|production) ]]; then
            echo "environment=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  determine-version-bump:
    if: ${{ startsWith(github.event.comment.body, 'publish') }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.TYPE }}
    steps:
      - name: Determine Version Bump
        id: bump
        run: |
          if [[ ${{ contains(github.event.issue.labels.*.name, 'major') }} == 'true' ]]; then
            echo "TYPE=major" >> $GITHUB_OUTPUT
          elif [[ ${{ contains(github.event.issue.labels.*.name, 'minor') }} == 'true' ]]; then
            echo "TYPE=minor" >> $GITHUB_OUTPUT
          elif [[ ${{ contains(github.event.issue.labels.*.name, 'patch') }} == 'true' ]]; then
            echo "TYPE=patch" >> $GITHUB_OUTPUT
          else
            echo "No version bump label found"
            exit 1
          fi

  build-and-publish:
    needs: [process-comment, determine-version-bump]
    if: needs.process-comment.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    environment: development
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TYPE: ${{ needs.determine-version-bump.outputs.version }}
      with:
        dry_run: ${{ needs.process-comment.outputs.environment != 'production' }}
        semantic_version: 19
        extra_plugins: |
          @semantic-release/git
          @semantic-release/changelog
          @semantic-release/exec

    # - name: Build package
    #   env:
    #     PACKAGE_VERSION: ${{ steps.semantic.outputs.new_release_version }}${{ needs.process-comment.outputs.environment != 'production' && '.dev0' || '' }}
    #   run: python -m build
    
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_ACCOUNT_REGION }}


    # - name: Upload to CodeArtifact
    #   run: |
    #     REPOSITORY_NAME="${{ secrets.PACKAGE_NAME }}"
    #     twine upload --repository-url https://${{ secrets.PACKAGE_DOMAIN }}-${{ needs.process-comment.outputs.environment }}-992382511592.d.codeartifact.${{ secrets.AWS_ACCOUNT_REGION }}.amazonaws.com/pypi/$REPOSITORY_NAME/ \
    #     --username aws \
    #     --password $(aws codeartifact get-authorization-token --domain ${{ secrets.PACKAGE_DOMAIN }}-${{ needs.process-comment.outputs.environment }} --region ${{ secrets.AWS_ACCOUNT_REGION }} --query authorizationToken --output text) \
    #     dist/*